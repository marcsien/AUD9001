// <auto-generated />
using System;
using AUD9001.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AUD9001.DataAccess.Migrations
{
    [DbContext(typeof(AUD9001StorageContext))]
    [Migration("20220222193841_TestingFirstController")]
    partial class TestingFirstController
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AUD9001.DataAccess.Entities.AcceptanceCriteria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TargetId");

                    b.ToTable("AcceptanceCriterias");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecommendedActionId")
                        .HasColumnType("int");

                    b.Property<string>("ResponsiblePersonId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecommendedActionId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Attachment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessRequirementId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessRequirementId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Attension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuditId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpottedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.ToTable("Attensions");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuditNumber")
                        .HasColumnType("int");

                    b.Property<int>("AuditTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentAuditId")
                        .HasColumnType("int");

                    b.Property<int>("ProcessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuditTypeId");

                    b.HasIndex("ParentAuditId");

                    b.HasIndex("ProcessId");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.AuditType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("AuditTypes");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.DocVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("UserCreatedId")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("DocumentId");

                    b.HasIndex("UserCreatedId");

                    b.ToTable("DocVersions");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Expectation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("AttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InterestedPersonId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("InterestedPersonId");

                    b.ToTable("Expectations");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Factor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Importance")
                        .HasColumnType("int");

                    b.Property<bool>("Internal")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Positive")
                        .HasColumnType("bit");

                    b.Property<int?>("StrategicPositionAnalysisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StrategicPositionAnalysisId");

                    b.ToTable("Factors");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Inconsistency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuditId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpottedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.ToTable("Inconsistencies");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Input", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AdditionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("Inputs");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.InterestedPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("InterestedPeople");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.ManagementReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("ManagementReviews");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Observation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuditId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpottedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuditId");

                    b.ToTable("Observations");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Output", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AdditionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("Outputs");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Process", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.ProcessRequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("ProcessRequirements");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.RecommendedAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttensionId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InconsistencyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ObservationId")
                        .HasColumnType("int");

                    b.Property<string>("RecommendingPersonId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttensionId");

                    b.HasIndex("InconsistencyId");

                    b.HasIndex("ObservationId");

                    b.ToTable("RecommendedActions");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Requirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("AttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InterestedPersonId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("InterestedPersonId");

                    b.ToTable("Requirements");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.HasIndex("TypeId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.ResourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResourceTypes");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.StrategicPositionAnalysis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AR")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PR")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.Property<int>("RecordNumber")
                        .HasColumnType("int");

                    b.Property<int>("SummaryO")
                        .HasColumnType("int");

                    b.Property<int>("SummaryS")
                        .HasColumnType("int");

                    b.Property<int>("SummaryT")
                        .HasColumnType("int");

                    b.Property<int>("SummaryW")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("StrategicPositionAnalyses");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Target", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeadlineDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("Targets");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.Property<int>("PermissionsId")
                        .HasColumnType("int");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("PermissionsId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("PermissionRole");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.AcceptanceCriteria", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Target", "Target")
                        .WithMany("AcceptanceCriterias")
                        .HasForeignKey("TargetId");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Action", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.RecommendedAction", "RecommendedAction")
                        .WithMany("Actions")
                        .HasForeignKey("RecommendedActionId");

                    b.Navigation("RecommendedAction");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Attachment", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.ProcessRequirement", null)
                        .WithMany("Attachments")
                        .HasForeignKey("ProcessRequirementId");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Attension", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Audit", "Audit")
                        .WithMany("Attensions")
                        .HasForeignKey("AuditId");

                    b.Navigation("Audit");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Audit", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.AuditType", "AuditType")
                        .WithMany("Audits")
                        .HasForeignKey("AuditTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AUD9001.DataAccess.Entities.Audit", "ParentAudit")
                        .WithMany()
                        .HasForeignKey("ParentAuditId");

                    b.HasOne("AUD9001.DataAccess.Entities.Process", "Process")
                        .WithMany("Audits")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditType");

                    b.Navigation("ParentAudit");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.DocVersion", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Attachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId");

                    b.HasOne("AUD9001.DataAccess.Entities.Document", "Document")
                        .WithMany("DocVersions")
                        .HasForeignKey("DocumentId");

                    b.HasOne("AUD9001.DataAccess.Entities.User", "UserCreated")
                        .WithMany()
                        .HasForeignKey("UserCreatedId");

                    b.Navigation("Attachment");

                    b.Navigation("Document");

                    b.Navigation("UserCreated");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Document", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Process", "Process")
                        .WithMany("Documents")
                        .HasForeignKey("ProcessId");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Expectation", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Attachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId");

                    b.HasOne("AUD9001.DataAccess.Entities.InterestedPerson", "InterestedPerson")
                        .WithMany("Expectations")
                        .HasForeignKey("InterestedPersonId");

                    b.Navigation("Attachment");

                    b.Navigation("InterestedPerson");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Factor", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.StrategicPositionAnalysis", "StrategicPositionAnalysis")
                        .WithMany("Factors")
                        .HasForeignKey("StrategicPositionAnalysisId");

                    b.Navigation("StrategicPositionAnalysis");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Inconsistency", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Audit", "Audit")
                        .WithMany("Inconsistencies")
                        .HasForeignKey("AuditId");

                    b.Navigation("Audit");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Input", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Process", "Process")
                        .WithMany("Inputs")
                        .HasForeignKey("ProcessId");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.InterestedPerson", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Process", "Process")
                        .WithMany("InterestedPeople")
                        .HasForeignKey("ProcessId");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.ManagementReview", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Company", "Company")
                        .WithMany("ManagementReviews")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Observation", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Audit", "Audit")
                        .WithMany("Observations")
                        .HasForeignKey("AuditId");

                    b.Navigation("Audit");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Output", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Process", "Process")
                        .WithMany("Outputs")
                        .HasForeignKey("ProcessId");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Process", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Company", "Company")
                        .WithMany("Processes")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.ProcessRequirement", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Process", "Process")
                        .WithMany("Requirements")
                        .HasForeignKey("ProcessId");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.RecommendedAction", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Attension", "Attension")
                        .WithMany("RecommendedActions")
                        .HasForeignKey("AttensionId");

                    b.HasOne("AUD9001.DataAccess.Entities.Inconsistency", "Inconsistency")
                        .WithMany("RecommendedActions")
                        .HasForeignKey("InconsistencyId");

                    b.HasOne("AUD9001.DataAccess.Entities.Observation", "Observation")
                        .WithMany("RecommendedActions")
                        .HasForeignKey("ObservationId");

                    b.Navigation("Attension");

                    b.Navigation("Inconsistency");

                    b.Navigation("Observation");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Requirement", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Attachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId");

                    b.HasOne("AUD9001.DataAccess.Entities.InterestedPerson", "InterestedPerson")
                        .WithMany("Requirements")
                        .HasForeignKey("InterestedPersonId");

                    b.Navigation("Attachment");

                    b.Navigation("InterestedPerson");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Resource", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Process", "Process")
                        .WithMany("Resources")
                        .HasForeignKey("ProcessId");

                    b.HasOne("AUD9001.DataAccess.Entities.ResourceType", "Type")
                        .WithMany("Resources")
                        .HasForeignKey("TypeId");

                    b.Navigation("Process");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.StrategicPositionAnalysis", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Process", "Process")
                        .WithMany("StrategicPositionAnalyses")
                        .HasForeignKey("ProcessId");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Target", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Process", "Process")
                        .WithMany("Targets")
                        .HasForeignKey("ProcessId");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.User", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Process", "Process")
                        .WithMany("Users")
                        .HasForeignKey("ProcessId");

                    b.HasOne("AUD9001.DataAccess.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Process");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PermissionRole", b =>
                {
                    b.HasOne("AUD9001.DataAccess.Entities.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AUD9001.DataAccess.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Attension", b =>
                {
                    b.Navigation("RecommendedActions");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Audit", b =>
                {
                    b.Navigation("Attensions");

                    b.Navigation("Inconsistencies");

                    b.Navigation("Observations");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.AuditType", b =>
                {
                    b.Navigation("Audits");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Company", b =>
                {
                    b.Navigation("ManagementReviews");

                    b.Navigation("Processes");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Document", b =>
                {
                    b.Navigation("DocVersions");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Inconsistency", b =>
                {
                    b.Navigation("RecommendedActions");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.InterestedPerson", b =>
                {
                    b.Navigation("Expectations");

                    b.Navigation("Requirements");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Observation", b =>
                {
                    b.Navigation("RecommendedActions");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Process", b =>
                {
                    b.Navigation("Audits");

                    b.Navigation("Documents");

                    b.Navigation("Inputs");

                    b.Navigation("InterestedPeople");

                    b.Navigation("Outputs");

                    b.Navigation("Requirements");

                    b.Navigation("Resources");

                    b.Navigation("StrategicPositionAnalyses");

                    b.Navigation("Targets");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.ProcessRequirement", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.RecommendedAction", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.ResourceType", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.StrategicPositionAnalysis", b =>
                {
                    b.Navigation("Factors");
                });

            modelBuilder.Entity("AUD9001.DataAccess.Entities.Target", b =>
                {
                    b.Navigation("AcceptanceCriterias");
                });
#pragma warning restore 612, 618
        }
    }
}
